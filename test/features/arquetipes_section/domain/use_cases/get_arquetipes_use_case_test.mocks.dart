// Mocks generated by Mockito 5.4.4 from annotations
// in yugiohgalaxy/test/features/arquetipes_section/domain/use_cases/get_arquetipes_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:yugiohgalaxy/core/domain/failures/common_failure.dart' as _i5;
import 'package:yugiohgalaxy/features/arquetipes_section/domain/models/arquetipe_list_model.dart'
    as _i7;
import 'package:yugiohgalaxy/features/arquetipes_section/domain/models/card_info/card_info_model.dart'
    as _i6;
import 'package:yugiohgalaxy/features/arquetipes_section/domain/repositories/arquetipes_section_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ArquetipeSectionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockArquetipeSectionRepository extends _i1.Mock
    implements _i3.ArquetipeSectionRepository {
  MockArquetipeSectionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.CommonFailure, _i6.CardInfoModel>> getCardDetail(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCardDetail,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.CommonFailure, _i6.CardInfoModel>>.value(
                _FakeEither_0<_i5.CommonFailure, _i6.CardInfoModel>(
          this,
          Invocation.method(
            #getCardDetail,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.CommonFailure, _i6.CardInfoModel>>);

  @override
  _i4.Future<_i2.Either<_i5.CommonFailure, List<_i7.ArquetipeListModel>>>
      getArquetipes() => (super.noSuchMethod(
            Invocation.method(
              #getArquetipes,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.CommonFailure,
                        List<_i7.ArquetipeListModel>>>.value(
                _FakeEither_0<_i5.CommonFailure, List<_i7.ArquetipeListModel>>(
              this,
              Invocation.method(
                #getArquetipes,
                [],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.CommonFailure, List<_i7.ArquetipeListModel>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.CommonFailure, List<_i6.CardInfoModel>>> getCardArquetipes(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCardArquetipes,
          [id],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.CommonFailure, List<_i6.CardInfoModel>>>.value(
            _FakeEither_0<_i5.CommonFailure, List<_i6.CardInfoModel>>(
          this,
          Invocation.method(
            #getCardArquetipes,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.CommonFailure, List<_i6.CardInfoModel>>>);

  @override
  _i4.Future<_i2.Either<_i5.CommonFailure, List<_i6.CardInfoModel>>>
      getCardsFromBanlist(String? id) => (super.noSuchMethod(
            Invocation.method(
              #getCardsFromBanlist,
              [id],
            ),
            returnValue: _i4.Future<
                    _i2
                    .Either<_i5.CommonFailure, List<_i6.CardInfoModel>>>.value(
                _FakeEither_0<_i5.CommonFailure, List<_i6.CardInfoModel>>(
              this,
              Invocation.method(
                #getCardsFromBanlist,
                [id],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.CommonFailure, List<_i6.CardInfoModel>>>);
}
